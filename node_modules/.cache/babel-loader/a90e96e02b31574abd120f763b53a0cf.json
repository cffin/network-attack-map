{"ast":null,"code":"var _jsxFileName = \"/Users/Home/github/network-attack-map/src/Components/ThreatMap.js\";\nimport React, { useState, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = 'pk.eyJ1IjoiY2tyYWN6a293c2t5IiwiYSI6ImNrY2F0c2RkdjFiMHYycm9mOHc2cWpkaTQifQ.A6dJbuqhlWaEe6WsFeRS2Q';\nvar geojson = {\n  type: 'FeatureCollection',\n  features: [{\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.032, 38.913]\n    },\n    properties: {\n      title: 'Mapbox',\n      description: 'Washington, D.C.'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-122.414, 37.776]\n    },\n    properties: {\n      title: 'Mapbox',\n      description: 'San Francisco, California'\n    }\n  }]\n};\nexport default class ThreatMap extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      lng: -122.4323,\n      lat: 37.7644,\n      zoom: 12\n    };\n  }\n\n  componentDidMount() {\n    // Initialize map\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    }); // Update state when user moves map\n\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(4)\n      });\n    }); // Add markers for geoJSON data\n\n    geojson.features.forEach(function (marker) {\n      var element = document.createElement('div');\n      element.className = 'marker';\n      new mapboxgl.Marker(element).setLngLat(marker.geometry.coordinates).addTo(map);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Map!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coordDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Longitude: \", this.state.lng, \" | Latitude \", this.state.lat, \" | Zoom: \", this.state.zoom)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mapContainer\",\n      ref: element => this.mapContainer = element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/Home/github/network-attack-map/src/Components/ThreatMap.js"],"names":["React","useState","useEffect","mapboxgl","accessToken","geojson","type","features","geometry","coordinates","properties","title","description","ThreatMap","Component","constructor","state","lng","lat","zoom","componentDidMount","map","Map","container","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","forEach","marker","element","document","createElement","className","Marker","setLngLat","addTo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEAA,QAAQ,CAACC,WAAT,GAAuB,kGAAvB;AAEA,IAAIC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,mBADM;AAEZC,EAAAA,QAAQ,EAAE,CAAC;AACTD,IAAAA,IAAI,EAAE,SADG;AAETE,IAAAA,QAAQ,EAAE;AACRF,MAAAA,IAAI,EAAE,OADE;AAERG,MAAAA,WAAW,EAAE,CAAC,CAAC,MAAF,EAAU,MAAV;AAFL,KAFD;AAMTC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE,QADG;AAEVC,MAAAA,WAAW,EAAE;AAFH;AANH,GAAD,EAWV;AACEN,IAAAA,IAAI,EAAE,SADR;AAEEE,IAAAA,QAAQ,EAAE;AACRF,MAAAA,IAAI,EAAE,OADE;AAERG,MAAAA,WAAW,EAAE,CAAC,CAAC,OAAF,EAAW,MAAX;AAFL,KAFZ;AAMEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE,QADG;AAEVC,MAAAA,WAAW,EAAE;AAFH;AANd,GAXU;AAFE,CAAd;AA0BA,eAAe,MAAMC,SAAN,SAAwBb,KAAK,CAACc,SAA9B,CAAuC;AACpDC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,GAAG,EAAE,CAAC,QADG;AAETC,MAAAA,GAAG,EAAE,OAFI;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAX;AAKD;;AAEDC,EAAAA,iBAAiB,GAAE;AACrB;AACI,UAAMC,GAAG,GAAG,IAAIlB,QAAQ,CAACmB,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAE,KAAKC,YADW;AAE3BC,MAAAA,KAAK,EAAE,oCAFoB;AAG3BC,MAAAA,MAAM,EAAE,CAAC,KAAKV,KAAL,CAAWC,GAAZ,EAAiB,KAAKD,KAAL,CAAWE,GAA5B,CAHmB;AAI3BC,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AAJU,KAAjB,CAAZ,CAFiB,CAQrB;;AACIE,IAAAA,GAAG,CAACM,EAAJ,CAAO,MAAP,EAAe,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZX,QAAAA,GAAG,EAAEI,GAAG,CAACQ,SAAJ,GAAgBZ,GAAhB,CAAoBa,OAApB,CAA4B,CAA5B,CADO;AAEZZ,QAAAA,GAAG,EAAEG,GAAG,CAACQ,SAAJ,GAAgBX,GAAhB,CAAoBY,OAApB,CAA4B,CAA5B,CAFO;AAGZX,QAAAA,IAAI,EAAEE,GAAG,CAACU,OAAJ,GAAcD,OAAd,CAAsB,CAAtB;AAHM,OAAd;AAKD,KAND,EATiB,CAgBrB;;AACIzB,IAAAA,OAAO,CAACE,QAAR,CAAiByB,OAAjB,CAAyB,UAASC,MAAT,EAAiB;AACxC,UAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAF,MAAAA,OAAO,CAACG,SAAR,GAAoB,QAApB;AAEA,UAAIlC,QAAQ,CAACmC,MAAb,CAAoBJ,OAApB,EACGK,SADH,CACaN,MAAM,CAACzB,QAAP,CAAgBC,WAD7B,EAEG+B,KAFH,CAESnB,GAFT;AAGD,KAPD;AAQD;;AAEDoB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0C,KAAKzB,KAAL,CAAWC,GAArD,kBAAsE,KAAKD,KAAL,CAAWE,GAAjF,eAA+F,KAAKF,KAAL,CAAWG,IAA1G,CADF,CAFF,eAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAGe,OAAD,IAAa,KAAKV,YAAL,GAAoBU,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA/CmD;AAiDrD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiY2tyYWN6a293c2t5IiwiYSI6ImNrY2F0c2RkdjFiMHYycm9mOHc2cWpkaTQifQ.A6dJbuqhlWaEe6WsFeRS2Q';\n\nvar geojson = {\n  type: 'FeatureCollection',\n  features: [{\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.032, 38.913]\n    },\n    properties: {\n      title: 'Mapbox',\n      description: 'Washington, D.C.'\n    }\n  },\n  {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-122.414, 37.776]\n    },\n    properties: {\n      title: 'Mapbox',\n      description: 'San Francisco, California'\n    }\n  }]\n};\n\nexport default class ThreatMap extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      lng: -122.4323,\n      lat: 37.7644,\n      zoom: 12\n    };\n  };\n\n  componentDidMount(){\n// Initialize map\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n// Update state when user moves map\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(4)\n      });\n    });\n// Add markers for geoJSON data\n    geojson.features.forEach(function(marker) {\n      var element = document.createElement('div');\n      element.className = 'marker';\n\n      new mapboxgl.Marker(element)\n        .setLngLat(marker.geometry.coordinates)\n        .addTo(map);\n    });\n  };\n\n  render(){\n    return(\n      <div>\n        <h1>Map!</h1>\n        <div>\n          <div className=\"coordDisplay\">Longitude: {this.state.lng} | Latitude {this.state.lat} | Zoom: {this.state.zoom}</div>\n        </div>\n        <div className=\"mapContainer\" ref={(element) => this.mapContainer = element }></div>\n      </div>\n    );\n  };\n\n};\n"]},"metadata":{},"sourceType":"module"}